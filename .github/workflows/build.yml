name: CI
on:
  pull_request:
    branches: [ '**', '!update/**', '!pr/**' ]
  push:
    branches: [ '**', '!update/**', '!pr/**' ]
    tags: [ v* ]

concurrency:
  group: ${{ github.workflow }} @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest, macos-13 ]
        include:
          - os: ubuntu-latest
            platform: x86_64-pc-linux
          - os: windows-latest
            platform: x86_64-pc-windows.exe
          - os: macos-latest
            platform: aarch64-apple-darwin
          - os: macos-13
            platform: x86_64-apple-darwin

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: VirtusLab/scala-cli-setup@main
        with:
          power: 'true'
          jvm: 'graalvm-community@21'
      - run: scala-cli test .
      - name: Build native image
        run: |
          mkdir -p target
          scala-cli package  --native-image --graalvm-jvm-id graalvm-community@21 -o target/micro-maven-resolver-${{matrix.platform}} . -- --no-fallback
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: micro-maven-resolver-${{matrix.platform}}
          path: target/micro-maven-resolver-${{matrix.platform}}

  publish:
    name: Publish Artifacts
    needs: [ build ]
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v')
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
    steps:
      - id: get_version
        uses: battila7/get-version-action@v2
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: assets
      - name: Add version to assets
        env:
          VERSION: "${{steps.get_version.outputs.version-without-v}}"
        run: |
          for file in assets/micro-maven-resolver-*; do
            # Extract the part after "micro-maven-resolver-"
            if [[ $file =~ ^.*micro-maven-resolver-(.*)$ ]]; then
              suffix="${BASH_REMATCH[1]}"

              # Construct the new filename
              new_file="assets/micro-maven-resolver-$VERSION-$suffix"

              # Rename the file
              mv "$file" "$new_file"
            fi
          done
      - name: Upload release binaries
        uses: softprops/action-gh-release@v2
        with:
          files: assets/*
